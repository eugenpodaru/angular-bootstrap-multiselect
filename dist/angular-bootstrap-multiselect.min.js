!function(){"use strict";var a=angular.module("btorfs.multiselect",["btorfs.multiselect.templates"]);a.getRecursiveProperty=function(a,b){return b.split(".").reduce(function(a,b){return a?a[b]:null},a)},a.directive("multiselect",["$filter","$document","$log",function(b,c,d){return{restrict:"AE",scope:{options:"=",displayProp:"@",idProp:"@",bindId:"@",searchLimit:"=?",selectionLimit:"=?",displayLimit:"=?",showSelectAll:"=?",showUnselectAll:"=?",showSearch:"=?",searchFilter:"=?",disabled:"=?ngDisabled",defaultText:"@",containerClass:"@",toggleClass:"@",dropdownClass:"@"},require:"ngModel",templateUrl:"multiselect.html",link:function(b,e,f,g){b.selectionLimit=b.selectionLimit||0,b.searchLimit=b.searchLimit||25,b.displayLimit=b.displayLimit||10,b.defaultText=b.defaultText||"Select",b.bindId=b.bindId||!1,b.containerClass=b.containerClass||"btn-group",b.toggleClass=b.toggleClass||"form-control dropdown-toggle btn btn-default btn-block",b.dropdownClass=b.dropdownClass||"dropdown-menu dropdown-menu-form",b.searchFilter="",b.selectedDisplayIndex=0,b.unselectedDisplayIndex=0,b.resolvedOptions=[],"undefined"!=typeof f.disabled&&(b.disabled=!0),b.toggleDropdown=function(){b.open=!b.open};var h=function(a){e[0].contains(a.target)||b.$apply(function(){b.open=!1})};c.on("click",h);var i=function(){g.$viewValue?(b.selectedOptions=b.resolvedOptions.filter(function(a){var c=b.getId(a),d=void 0;if(angular.isString(g.$viewValue)||angular.isObject(g.$viewValue)){if(d=b.getId(g.$viewValue),c===d)return!0}else if(angular.isArray(g.$viewValue))for(var e=0;e<g.$viewValue.length;e++){var d=b.getId(g.$viewValue[e]);if(c===d)return!0}return!1}),b.unselectedOptions=b.resolvedOptions.filter(function(a){return b.selectedOptions.indexOf(a)<0})):(b.selectedOptions&&(b.selectedOptions=[]),b.unselectedOptions=b.resolvedOptions.slice())},j=function(){b.resolvedOptions=[],"function"==typeof b.options?b.options().then(function(a){b.resolvedOptions=a,i()}):(b.resolvedOptions=b.options,i())},k=function(){var a=void 0;1===b.selectedOptions.length?a=b.bindId?b.getId(b.selectedOptions[0]):b.selectedOptions[0]:b.selectedOptions.length>1&&(a=b.bindId?b.selectedOptions.map(function(a){return b.getId(a)}):angular.copy(b.selectedOptions)),g.$setViewValue(a)};g.$render=function(){i()},g.$viewChangeListeners.push(function(){i()}),g.$isEmpty=function(a){return a?0===a.length:!0};var l=b.$watch("selectedOptions",function(){k()},!0),m=b.$watch("options",function(){j()},!0);b.$on("$destroy",function(){c.off("click",h),l&&l(),m&&m()}),b.getButtonText=function(){if(b.selectedOptions&&1===b.selectedOptions.length)return b.getDisplay(b.selectedOptions[0]);if(b.selectedOptions&&b.selectedOptions.length>1){var a;return a=angular.isDefined(b.selectedOptions)?b.selectedOptions.length:0,0===a?b.defaultText:a+" selected"}return b.defaultText},b.selectAll=function(){b.selectedOptions=b.resolvedOptions,b.unselectedOptions=[]},b.unselectAll=function(){b.selectedOptions=[],b.unselectedOptions=b.resolvedOptions},b.toggleItem=function(a){"undefined"==typeof b.selectedOptions&&(b.selectedOptions=[]);var c=b.selectedOptions.indexOf(a),d=-1!==c;if(d&&b.selectionLimit>1)b.unselectedOptions.push(b.selectedOptions[c]),b.selectedOptions.splice(c,1);else if(!d&&(0===b.selectionLimit||b.selectedOptions.length<b.selectionLimit)){var e=b.unselectedOptions.indexOf(a);b.unselectedOptions.splice(e,1),b.selectedOptions.push(a)}else if(!d&&1===b.selectionLimit){var e=b.unselectedOptions.indexOf(a);b.unselectedOptions.splice(e,1),b.selectedOptions.splice(0,1),b.selectedOptions.push(a),b.toggleDropdown()}},b.getId=function(c){return angular.isString(c)?c:angular.isObject(c)?b.idProp?a.getRecursiveProperty(c,b.idProp):(d.error("Multiselect: when using objects as model, a idProp value is mandatory."),""):c},b.getDisplay=function(c){return angular.isString(c)?c:angular.isObject(c)?b.displayProp?a.getRecursiveProperty(c,b.displayProp):(d.error("Multiselect: when using objects as model, a displayProp value is mandatory."),""):c},b.isSelected=function(a){if(!b.selectedOptions)return!1;for(var c=b.getId(a),d=0;d<b.selectedOptions.length;d++){var e=b.selectedOptions[d];if(b.getId(e)===c)return!0}return!1},b.search=function(){var a=0;return function(c){if(a>b.searchLimit)return!1;var d=b.getDisplay(c);if(d){var e=d.toLowerCase().indexOf(b.searchFilter.toLowerCase())>-1;return e&&a++,e}}},b.pageUp=function(a){var c=a-b.displayLimit;a=c>0?c:0},b.pageDown=function(a,c){var d=a+b.displayLimit;a=c>d?d:c-b.displayLimit-1},j()}}}])}(),angular.module("btorfs.multiselect.templates",["multiselect.html"]),angular.module("multiselect.html",[]).run(["$templateCache",function(a){a.put("multiselect.html",'<div class="{{::containerClass}}">\n    <button type="button" class="{{::toggleClass}}" ng-click="toggleDropdown()" ng-disabled="disabled">\n        {{getButtonText()}}&nbsp;<span class="caret"></span>\n    </button>\n    <ul class="{{::dropdownClass}}" ng-style="{display: open ? \'block\' : \'none\'}">\n\n        <li ng-show="showSelectAll">\n            <a ng-click="selectAll()" href="">\n                <span class="glyphicon glyphicon-ok"></span> Select All\n            </a>\n        </li>\n        <li ng-show="showUnselectAll">\n            <a ng-click="unselectAll()" href="">\n                <span class="glyphicon glyphicon-remove"></span> Unselect All\n            </a>\n        </li>\n        <li ng-show="(showSelectAll || showUnselectAll)" class="divider">\n        </li>\n        \n        <li ng-if="selectedOptions.length > displayLimit" ng-class="{disabled: selectedDisplayIndex - displayLimit < 0}">\n            <a href="" ng-click="pageUp(selectedDisplayIndex); $event.stopPropagation()">\n                <span class="glyphicon glyphicon-chevron-up"></span>\n            </a>\n        </li>\n        <li role="presentation" ng-repeat="option in selectedOptions | limiTo : displayLimit : selectedDisplayIndex" class="active"\n            ng-if="selectionLimit && selectionLimit > 1">\n            <a class="item-selected" href="" ng-click="toggleItem(option); $event.stopPropagation()">\n                <span class="glyphicon glyphicon-remove"></span> {{getDisplay(option)}}\n            </a>\n        </li>\n        <li ng-if="selectedOptions.length > displayLimit" ng-class="{disabled: selectedDisplayIndex + displayLimit > selectedOptions.length}">\n            <a href="" ng-click="pageDown(selectedDisplayIndex, selectedOptions.length); $event.stopPropagation()">\n                <span class="glyphicon glyphicon-chevron-down"></span>\n            </a>\n        </li>\n        <li ng-show="selectedOptions.length > 0" class="divider"></li>\n\n        <li ng-show="showSearch">\n            <div class="dropdown-header">\n                <input type="text" class="form-control input-sm" style="width: 100%;" ng-model="searchFilter" placeholder="Search..." ng-change="updateOptions()"\n                />\n            </div>\n        </li>\n\n        <li ng-show="showSearch" class="divider"></li>\n        <li ng-if="unselectedOptions.length > displayLimit" ng-class="{disabled: unselectedDisplayIndex - displayLimit < 0}">\n            <a href="" ng-click="pageUp(unselectedDisplayIndex); $event.stopPropagation()">\n                <span class="glyphicon glyphicon-chevron-up"></span>\n            </a>\n        </li>\n        <li role="presentation" ng-repeat="option in unselectedOptions | filter:search() | limitTo: displayLimit : unselectedDisplayIndex"\n            ng-if="!isSelected(option)" ng-class="{disabled : selectionLimit && selectionLimit > 1 && selectedOptions.length >= selectionLimit}">\n            <a class="item-unselected" href="" ng-click="toggleItem(option); $event.stopPropagation()">\n                {{getDisplay(option)}}\n            </a>\n        </li>\n        <li ng-if="unselectedOptions.length > displayLimit" ng-class="{disabled: unselectedDisplayIndex + displayLimit > unselectedOptions.length}">\n            <a href="" ng-click="pageDown(unselectedDisplayIndex, unselectedOptions.length); $event.stopPropagation()">\n                <span class="glyphicon glyphicon-chevron-down"></span>\n            </a>\n        </li>\n\n        <li class="divider" ng-show="selectionLimit > 1"></li>\n        <li role="presentation" ng-show="selectionLimit > 1">\n            <a>{{selectedOptions.length || 0}} / {{selectionLimit}} selected</a>\n        </li>\n\n    </ul>\n</div>')}]);