!function(){"use strict";var a=angular.module("ui.multiselect",["ui.multiselect.templates"]);a.getRecursiveProperty=function(a,b){return b.split(".").reduce(function(a,b){return a?a[b]:null},a)},a.directive("uiMultiselect",["$filter","$document","$log",function(b,c,d){return{restrict:"AE",scope:{options:"=",displayProp:"@",idProp:"@",bindId:"@",searchLimit:"=?",selectionLimit:"=?",selectedDisplayLimit:"=?",unselectedDisplayLimit:"=?",showSelectAll:"=?",showUnselectAll:"=?",showSearch:"=?",searchFilter:"=?",disabled:"=?ngDisabled",defaultText:"@",containerClass:"@",toggleClass:"@",dropdownClass:"@"},require:"ngModel",templateUrl:"multiselect.html",link:function(e,f,g,h){e.selectionLimit=e.selectionLimit||0,e.searchLimit=e.searchLimit||25,e.selectedDisplayLimit=e.selectedDisplayLimit||5,e.unselectedDisplayLimit=e.unselectedDisplayLimit||10,e.defaultText=e.defaultText||"Select",e.bindId=e.bindId||!1,e.containerClass=e.containerClass||"btn-group",e.toggleClass=e.toggleClass||"form-control dropdown-toggle btn btn-default btn-block",e.dropdownClass=e.dropdownClass||"dropdown-menu dropdown-menu-form",e.searchFilter="",e.selectedDisplayIndex=0,e.unselectedDisplayIndex=0,e.resolvedOptions=[],e.selectedOptions=[],e.unselectedOptions=[],e.selectedOptionsView=[],e.unselectedOptionsFiltered=[],e.unselectedOptionsView=[],"undefined"!=typeof g.disabled&&(e.disabled=!0),e.toggleDropdown=function(){e.open=!e.open};var i=function(a){f[0].contains(a.target)||e.$apply(function(){e.open=!1})};c.on("click",i);var j=function(){var a=0;return function(b){if(a>e.searchLimit)return!1;var c=e.getDisplay(b);if(c){var d=c.toLowerCase().indexOf(e.searchFilter.toLowerCase())>-1;return d&&a++,d}}},k=function(a){a&&(e.selectedDisplayIndex=0,e.unselectedDisplayIndex=0),e.selectedOptionsView=e.selectedOptions.slice(e.selectedDisplayIndex,e.selectedDisplayIndex+e.selectedDisplayLimit),e.unselectedOptionsFiltered=b("filter")(e.unselectedOptions,j()),e.unselectedOptionsView=e.unselectedOptionsFiltered.slice(e.unselectedDisplayIndex,e.unselectedDisplayIndex+e.unselectedDisplayLimit)},l=function(){h.$viewValue?(e.selectedOptions=e.resolvedOptions.filter(function(a){var b=e.getId(a),c=void 0;if(angular.isArray(h.$viewValue))for(var d=0;d<h.$viewValue.length;d++){var c=e.getId(h.$viewValue[d]);if(b===c)return!0}else if(c=e.getId(h.$viewValue),b===c)return!0;return!1}),e.unselectedOptions=e.resolvedOptions.filter(function(a){return e.selectedOptions.indexOf(a)<0})):(e.selectedOptions=[],e.unselectedOptions=e.resolvedOptions.slice()),k(!0)},m=function(){e.resolvedOptions=[],"function"==typeof e.options?e.options().then(function(a){e.resolvedOptions=a,l()}):(e.resolvedOptions=e.options,l())},n=function(){var a=void 0;1===e.selectedOptions.length?a=e.bindId?e.getId(e.selectedOptions[0]):e.selectedOptions[0]:e.selectedOptions.length>1&&(a=e.bindId?e.selectedOptions.map(function(a){return e.getId(a)}):angular.copy(e.selectedOptions)),h.$setViewValue(a)};h.$render=function(){l()},h.$viewChangeListeners.push(function(){l()}),h.$isEmpty=function(a){return a?0===a.length:!0};var o=e.$watch("selectedOptions",function(){n()},!0),p=e.$watch("options",function(){m()},!0);e.$on("$destroy",function(){c.off("click",i),o&&o(),p&&p()}),e.getButtonText=function(){if(e.selectedOptions&&1===e.selectedOptions.length)return e.getDisplay(e.selectedOptions[0]);if(e.selectedOptions&&e.selectedOptions.length>1){var a;return a=angular.isDefined(e.selectedOptions)?e.selectedOptions.length:0,0===a?e.defaultText:a+" selected"}return e.defaultText},e.update=function(){k(!0)},e.selectAll=function(){e.selectedOptions=e.resolvedOptions.slice(),e.unselectedOptions=[],k(!0)},e.unselectAll=function(){e.selectedOptions=[],e.unselectedOptions=e.resolvedOptions.slice(),k(!0)},e.toggleItem=function(a){var b=e.selectedOptions.indexOf(a),c=-1!==b;if(c&&(0===e.selectionLimit||e.selectionLimit>1))e.unselectedOptions.push(e.selectedOptions[b]),e.selectedOptions.splice(b,1);else if(!c&&(0===e.selectionLimit||e.selectedOptions.length<e.selectionLimit)){var d=e.unselectedOptions.indexOf(a);e.unselectedOptions.splice(d,1),e.selectedOptions.push(a)}else if(!c&&1===e.selectionLimit){var d=e.unselectedOptions.indexOf(a);e.unselectedOptions.splice(d,1),e.selectedOptions.splice(0,1),e.selectedOptions.push(a),e.toggleDropdown()}k()},e.getId=function(b){return angular.isObject(b)?e.idProp?a.getRecursiveProperty(b,e.idProp):(d.error("Multiselect: when using objects as model, a idProp value is mandatory."),""):b},e.getDisplay=function(b){return angular.isObject(b)?e.displayProp?a.getRecursiveProperty(b,e.displayProp):(d.error("Multiselect: when using objects as model, a displayProp value is mandatory."),""):b},e.unselectedPageUp=function(){var a=e.unselectedDisplayIndex-e.unselectedDisplayLimit;e.unselectedDisplayIndex=a>0?a:0,k()},e.unselectedPageDown=function(){var a=e.unselectedOptionsFiltered.length,b=e.unselectedDisplayIndex+e.unselectedDisplayLimit;e.unselectedDisplayIndex=a>b?b:a-e.unselectedDisplayLimit-1,k()},e.selectedPageUp=function(){var a=e.selectedDisplayIndex-e.selectedDisplayLimit;e.selectedDisplayIndex=a>0?a:0,k()},e.selectedPageDown=function(){var a=e.selectedOptions.length,b=e.selectedDisplayIndex+e.selectedDisplayLimit;e.selectedDisplayIndex=a>b?b:a-e.selectedDisplayLimit-1,k()},m()}}}])}(),angular.module("ui.multiselect.templates",["multiselect.html"]),angular.module("multiselect.html",[]).run(["$templateCache",function(a){a.put("multiselect.html",'<div class="{{::containerClass}}">\n    <button type="button" class="{{::toggleClass}}" ng-click="toggleDropdown()" ng-disabled="disabled">\n        {{getButtonText()}}&nbsp;<span class="caret"></span>\n    </button>\n    <ul class="{{::dropdownClass}}" ng-style="{display: open ? \'block\' : \'none\'}">\n\n        <li ng-show="showSelectAll">\n            <a ng-click="selectAll()" href="">\n                <span class="glyphicon glyphicon-ok"></span> Select All\n            </a>\n        </li>\n        <li ng-show="showUnselectAll">\n            <a ng-click="unselectAll()" href="">\n                <span class="glyphicon glyphicon-remove"></span> Unselect All\n            </a>\n        </li>\n        <li ng-show="(showSelectAll || showUnselectAll)" class="divider">\n        </li>\n\n        <li ng-if="selectedOptions.length > selectedDisplayLimit" ng-class="{disabled: selectedDisplayIndex - selectedDisplayLimit < 0}">\n            <a href="" ng-click="selectedPageUp(); $event.stopPropagation()" class="text-center">\n                <span class="glyphicon glyphicon-chevron-up"></span>\n            </a>\n        </li>\n        <li role="presentation" ng-repeat="option in selectedOptionsView" class="active">\n            <a class="item-selected" href="" ng-click="toggleItem(option); $event.stopPropagation()">\n                <span class="glyphicon glyphicon-remove" ng-if="selectionLimit !== 1"></span> {{getDisplay(option)}}\n            </a>\n        </li>\n        <li ng-if="selectedOptions.length > selectedDisplayLimit" ng-class="{disabled: selectedDisplayIndex + selectedDisplayLimit > selectedOptions.length}">\n            <a href="" ng-click="selectedPageDown(); $event.stopPropagation()" class="text-center">\n                <span class="glyphicon glyphicon-chevron-down"></span>\n            </a>\n        </li>\n        <li ng-show="selectedOptions.length > 0" class="divider"></li>\n\n        <li ng-show="showSearch">\n            <div class="dropdown-header">\n                <input type="text" class="form-control input-sm" ng-model="searchFilter" placeholder="Search..." ng-change="update()" />\n            </div>\n        </li>\n\n        <li ng-show="showSearch" class="divider"></li>\n        <li ng-if="unselectedOptionsFiltered.length > unselectedDisplayLimit" ng-class="{disabled: unselectedDisplayIndex - unselectedDisplayLimit < 0}">\n            <a href="" ng-click="unselectedPageUp(); $event.stopPropagation()" class="text-center">\n                <span class="glyphicon glyphicon-chevron-up"></span>\n            </a>\n        </li>\n        <li role="presentation" ng-repeat="option in unselectedOptionsView" ng-class="{disabled : selectionLimit && selectionLimit > 1 && selectedOptions.length >= selectionLimit}">\n            <a class="item-unselected" href="" ng-click="toggleItem(option); $event.stopPropagation()">\n                {{getDisplay(option)}}\n            </a>\n        </li>\n        <li ng-if="unselectedOptionsFiltered.length > unselectedDisplayLimit" ng-class="{disabled: unselectedDisplayIndex + unselectedDisplayLimit > unselectedOptionsFiltered.length}">\n            <a href="" ng-click="unselectedPageDown(); $event.stopPropagation()" class="text-center">\n                <span class="glyphicon glyphicon-chevron-down"></span>\n            </a>\n        </li>\n\n        <li class="divider" ng-show="selectionLimit > 1"></li>\n        <li role="presentation" ng-show="selectionLimit > 1">\n            <a>{{selectedOptions.length || 0}} / {{selectionLimit}} selected</a>\n        </li>\n\n    </ul>\n</div>')}]);